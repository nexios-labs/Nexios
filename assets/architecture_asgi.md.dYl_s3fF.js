import{_ as a,c as i,o as n,ah as t}from"./chunks/framework.C_cZWXvK.js";const g=JSON.parse('{"title":"‚ö° Understanding ASGI","description":"","frontmatter":{},"headers":[],"relativePath":"architecture/asgi.md","filePath":"architecture/asgi.md"}'),e={name:"architecture/asgi.md"};function r(l,s,h,p,k,o){return n(),i("div",null,s[0]||(s[0]=[t(`<h1 id="‚ö°-understanding-asgi" tabindex="-1">‚ö° Understanding ASGI <a class="header-anchor" href="#‚ö°-understanding-asgi" aria-label="Permalink to ‚Äú‚ö° Understanding ASGI‚Äù">‚Äã</a></h1><p>Whether you‚Äôre using Nexios, FastAPI, or Starlette, you‚Äôre relying on ASGI ‚Äî the <strong>Asynchronous Server Gateway Interface</strong>. It‚Äôs the async evolution of WSGI, designed for modern Python apps that need <strong>speed</strong>, <strong>concurrency</strong>, and <strong>WebSocket support</strong>.</p><hr><h2 id="üî•-asgi-vs-wsgi-‚Äî-why-the-change" tabindex="-1">üî• ASGI vs WSGI ‚Äî Why the Change? <a class="header-anchor" href="#üî•-asgi-vs-wsgi-‚Äî-why-the-change" aria-label="Permalink to ‚Äúüî• ASGI vs WSGI ‚Äî Why the Change?‚Äù">‚Äã</a></h2><table tabindex="0"><thead><tr><th>Feature</th><th>WSGI</th><th>ASGI</th></tr></thead><tbody><tr><td>Concurrency</td><td>Synchronous only üêå</td><td>Asynchronous + concurrent ‚ö°</td></tr><tr><td>WebSockets</td><td>‚ùå Not supported</td><td>‚úÖ Native support</td></tr><tr><td>Background tasks</td><td>Tricky to manage</td><td>Easy with <code>asyncio.create_task()</code></td></tr><tr><td>Ideal for</td><td>Simple APIs, websites</td><td>Real-time apps, APIs, async systems</td></tr></tbody></table><h3 id="tl-dr" tabindex="-1">TL;DR: <a class="header-anchor" href="#tl-dr" aria-label="Permalink to ‚ÄúTL;DR:‚Äù">‚Äã</a></h3><p><strong>WSGI</strong> = great for blogs, admin panels, or simple APIs. <strong>ASGI</strong> = ideal for real-time dashboards, video calls, live chats, and fast APIs. That&#39;s why Nexios is async-first.</p><hr><h2 id="üß™-what-is-asgi-really" tabindex="-1">üß™ What Is ASGI Really? <a class="header-anchor" href="#üß™-what-is-asgi-really" aria-label="Permalink to ‚Äúüß™ What Is ASGI Really?‚Äù">‚Äã</a></h2><p>At its core, ASGI is just a <strong>specification</strong>: a way your Python app can interact with an async server like <a href="https://www.uvicorn.org/" target="_blank" rel="noreferrer">Uvicorn</a> or <a href="https://github.com/django/daphne" target="_blank" rel="noreferrer">Daphne</a>. It defines how the app should:</p><ul><li>Accept <strong>connections</strong> (<code>scope</code>)</li><li>Receive <strong>messages</strong> (<code>receive</code>)</li><li>Send <strong>responses</strong> or <strong>events</strong> (<code>send</code>)</li></ul><hr><h2 id="üß©-the-core-asgi-app-no-framework" tabindex="-1">üß© The Core ASGI App (No Framework) <a class="header-anchor" href="#üß©-the-core-asgi-app-no-framework" aria-label="Permalink to ‚Äúüß© The Core ASGI App (No Framework)‚Äù">‚Äã</a></h2><p>Here‚Äôs a raw ASGI app, no fluff:</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># app.py</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> app</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scope, receive, send):</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> scope[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;type&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;http&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> receive()  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Wait for incoming request</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> send({</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;type&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;http.response.start&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;status&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">200</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;headers&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            [</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">b</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;content-type&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">b</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;text/plain&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    })</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> send({</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;type&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;http.response.body&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;body&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">b</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Hello from raw ASGI!&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    })</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>Start it with:</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">uvicorn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> app:app</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --reload</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Boom ‚Äî You‚Äôve got a web server, no Django, no Flask, just you and ASGI.</p><hr><h2 id="üöÄ-asgi-frameworks-in-real-life" tabindex="-1">üöÄ ASGI Frameworks in Real Life <a class="header-anchor" href="#üöÄ-asgi-frameworks-in-real-life" aria-label="Permalink to ‚ÄúüöÄ ASGI Frameworks in Real Life‚Äù">‚Äã</a></h2><p>You <em>could</em> build a full app with raw ASGI... but you&#39;d lose your sanity. That‚Äôs why we have ASGI frameworks:</p><table tabindex="0"><thead><tr><th>Framework</th><th>Description</th><th>Link</th></tr></thead><tbody><tr><td><strong>Nexios</strong></td><td>Lightweight ASGI framework built for speed and freedom. Supports JWT, auth layers, custom routing, etc.</td><td><a href="https://github.com/nexios-labs/Nexios" target="_blank" rel="noreferrer">Nexios on GitHub</a></td></tr><tr><td><strong>FastAPI</strong></td><td>Declarative, powerful API builder with Pydantic and async built-in. Great for REST APIs.</td><td><a href="https://fastapi.tiangolo.com" target="_blank" rel="noreferrer">fastapi.tiangolo.com</a></td></tr><tr><td><strong>Starlette</strong></td><td>FastAPI‚Äôs foundation ‚Äî gives you routing, middlewares, and tools for building async web apps.</td><td><a href="https://www.starlette.io" target="_blank" rel="noreferrer">starlette.io</a></td></tr><tr><td><strong>Quart</strong></td><td>Flask-compatible but async. If you&#39;re coming from Flask and want async, this helps.</td><td><a href="https://pgjones.gitlab.io/quart" target="_blank" rel="noreferrer">pgjones.gitlab.io/quart</a></td></tr></tbody></table><p>üß† <strong>Note:</strong> Nexios gives you full freedom without being too magic-heavy like FastAPI. You control routing, responses, middlewares ‚Äî just like Express.js but async-native.</p><hr><h2 id="üß†-how-uvicorn-and-granian-fit-in" tabindex="-1">üß† How Uvicorn and Granian Fit In <a class="header-anchor" href="#üß†-how-uvicorn-and-granian-fit-in" aria-label="Permalink to ‚Äúüß† How Uvicorn and Granian Fit In‚Äù">‚Äã</a></h2><ul><li><p><strong><a href="https://www.uvicorn.org/" target="_blank" rel="noreferrer">Uvicorn</a></strong>: ASGI web server based on <code>uvloop</code>. Lightweight, fast, and compatible with most frameworks. Runs your app.</p></li><li><p><strong><a href="https://github.com/emmett-framework/granian" target="_blank" rel="noreferrer">Granian</a></strong>: A newer Rust-powered ASGI server. Slightly faster than Uvicorn on benchmarks, with multi-threading options.</p></li></ul><p>üîß Nexios supports both ‚Äî Uvicorn for default setups, Granian for performance-heavy deployments.</p><hr><h2 id="‚ú®-a-bit-smarter-example" tabindex="-1">‚ú® A Bit Smarter Example <a class="header-anchor" href="#‚ú®-a-bit-smarter-example" aria-label="Permalink to ‚Äú‚ú® A Bit Smarter Example‚Äù">‚Äã</a></h2><p>Let‚Äôs add some path-based routing manually:</p><div class="language-python line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> app</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scope, receive, send):</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> scope[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;type&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;http&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> receive()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    path </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> scope[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;path&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    content </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">b</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;üè† Welcome Home&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;/about&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">b</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;üìò About ASGI&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }.get(path, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">b</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;‚ùì Page Not Found&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> send({</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;type&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;http.response.start&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;status&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">200</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;headers&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [[</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">b</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;content-type&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">b</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;text/plain&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    })</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> send({</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;type&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;http.response.body&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;body&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: content</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    })</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><hr><h2 id="üí°-why-nexios-chooses-asgi" tabindex="-1">üí° Why Nexios Chooses ASGI <a class="header-anchor" href="#üí°-why-nexios-chooses-asgi" aria-label="Permalink to ‚Äúüí° Why Nexios Chooses ASGI‚Äù">‚Äã</a></h2><ul><li>It&#39;s <strong>async-native</strong>, meaning Nexios can handle thousands of concurrent requests without threads.</li><li>Real-time apps (video calls, WebSocket chat, etc.) become first-class citizens.</li><li>Easier performance tuning with Uvicorn or Granian.</li><li>No GIL-bound threadpool hacks ‚Äî true Pythonic concurrency.</li></ul>`,34)]))}const c=a(e,[["render",r]]);export{g as __pageData,c as default};
