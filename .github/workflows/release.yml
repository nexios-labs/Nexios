  release:
    runs-on: ubuntu-latest
    needs: detect-release-parameters
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Generate changelog from last tag to current
        env:
          CHANGELOG_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mkdir -p build
          docker run -it --rm \
            -v "$(pwd)":/usr/local/src/your-app \
            -e CHANGELOG_GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }} \
            githubchangeloggenerator/github-changelog-generator \
            -u ${{ github.repository_owner }} \
            -p ${{ github.event.repository.name }} \
            --since-tag $(git describe --tags --abbrev=0 HEAD^) \
            --output build/changelog.md

      - name: Create GitHub Release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          tag_name="${GITHUB_REF##*/}"
          gh release create "$tag_name" \
            --notes-file build/changelog.md \
            --title "$tag_name"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      
      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
      
      - name: Setup Virtual Environment
        run: uv venv
      
      - name: Install dependencies
        run: uv pip install -e ".[dev]"
      
      - name: Clean Old Builds
        run: rm -rf dist build *.egg-info
      
      - name: Build the package
        run: uv build
      
      - name: Publish to PyPI
        run: uv publish --token ${{ secrets.POETRY_PYPI_TOKEN_PYPI }}
